{"ast":null,"code":"import _defineProperty from \"/github/workspace/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { concat } from '@/utils/component';\nimport Body from '../body';\nimport Card from '@/components/card';\nimport { Close } from '@/components/svg';\nimport Button from '@/components/button';\nimport styles from './modal.module.scss';\n\nvar ModalContent = function ModalContent(props) {\n  var onClose = props.onClose,\n      className = props.className,\n      style = props.style,\n      children = props.children;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: concat(className, styles.modal),\n      style: style,\n      children: /*#__PURE__*/_jsxs(Card, {\n        style: {\n          background: 'var(--background)'\n        },\n        children: [!!onClose ? /*#__PURE__*/_jsx(Button, {\n          icon: /*#__PURE__*/_jsx(Close, {}),\n          style: {\n            position: 'relative',\n            top: -15,\n            right: -15,\n            marginBottom: -15,\n            \"float\": 'right'\n          },\n          onClick: function onClick() {\n            return onClose();\n          }\n        }) : null, /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            clear: 'both'\n          },\n          children: children\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.dimmed,\n      onClick: function onClick() {\n        return onClose();\n      }\n    })]\n  });\n};\n\nvar Modal = function Modal(props) {\n  var _props$show = props.show,\n      show = _props$show === void 0 ? true : _props$show;\n  return show ? /*#__PURE__*/_jsx(Body, {\n    children: /*#__PURE__*/_jsx(ModalContent, _objectSpread({}, props))\n  }) : null;\n};\n\nvar info = function info(props) {\n  var _Body$Insert = Body.Insert(function (_ref) {\n    var update = _ref.update,\n        remove = _ref.remove;\n    return /*#__PURE__*/_jsx(ModalContent, _objectSpread(_objectSpread({}, props), {}, {\n      onClose: remove\n    }));\n  }),\n      update = _Body$Insert.update,\n      remove = _Body$Insert.remove;\n\n  return {\n    update: update,\n    remove: remove\n  };\n};\n\nexport default Object.assign(Modal, {\n  info: info\n});","map":null,"metadata":{},"sourceType":"module"}