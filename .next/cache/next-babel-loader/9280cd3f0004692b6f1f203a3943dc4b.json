{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport { Flex } from '@/components/container';\nimport { Edit, Plus, Delete, Image } from '@/components/svg';\nimport TagPart from '@/components/tag';\nimport { QiniuModal } from '@/components/upload';\nimport Table from '@/components/table';\nimport Button from '@/components/button';\nimport Input, { TextArea } from '@/components/input';\nimport Popover from '@/components/popover';\nimport Card from '@/components/card';\nimport { Context } from '@/utils/global';\nimport { adminTags, tagDelete, tagEdit } from '@/utils/api';\nimport ShowNotification from '@/utils/notification';\nimport { waitUntil } from '@/utils/debounce';\nimport randomString from '@/utils/random';\nimport { CheckBox } from '@/components/input';\nconst defaultSortField = 'count';\nconst defaultSortInc = false;\n\nclass AdminTagList extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    _defineProperty(this, \"getData\", async (keyword, size, page = 1, field = defaultSortField, up = defaultSortInc) => {\n      this.setState({\n        loading: true,\n        page,\n        size\n      });\n      var r = await adminTags(keyword, page, size, field, up);\n      this.setState({\n        data: r.tags,\n        total: r.total,\n        loading: false,\n        sortField: field,\n        sortAscending: up\n      });\n    });\n\n    _defineProperty(this, \"renderEditableCell\", (idx, key, textarea = false) => {\n      const props = {\n        transform: true,\n        value: this.state.data[idx][key],\n        onChange: value => {\n          this.setState(state => {\n            var {\n              data\n            } = state;\n            data[idx][key] = value;\n            return {\n              data\n            };\n          });\n        }\n      };\n      return textarea ? /*#__PURE__*/_jsx(TextArea, _objectSpread({}, props)) : /*#__PURE__*/_jsx(Input, _objectSpread({}, props));\n    });\n\n    _defineProperty(this, \"columns\", [{\n      title: '名称',\n      key: 'name',\n      tooltip: text => text,\n      sorter: true,\n      minWidth: '5em',\n      maxWidth: '10em',\n      ellipsis: true,\n      render: (_, __, idx) => this.renderEditableCell(idx, 'name')\n    }, {\n      title: '链接',\n      key: 'short',\n      tooltip: text => text,\n      sorter: true,\n      minWidth: '5em',\n      maxWidth: '10em',\n      ellipsis: true,\n      render: (_, __, idx) => this.renderEditableCell(idx, 'short')\n    }, {\n      title: '图标',\n      key: 'icon',\n      tooltip: text => text,\n      sorter: true,\n      minWidth: '5em',\n      maxWidth: '10em',\n      ellipsis: true,\n      render: (_, __, idx) => this.renderEditableCell(idx, 'icon')\n    }, {\n      title: '颜色',\n      key: 'color',\n      tooltip: text => text,\n      sorter: true,\n      minWidth: '5em',\n      maxWidth: '10em',\n      ellipsis: true,\n      render: (_, __, idx) => this.renderEditableCell(idx, 'color')\n    }, {\n      title: '预览',\n      key: 'view',\n      minWidth: '10em',\n      maxWidth: '20em',\n      render: (_, record, __) => /*#__PURE__*/_jsx(TagPart, {\n        tag: record\n      })\n    }, {\n      title: '文章个数',\n      key: 'count',\n      tooltip: true,\n      minWidth: '6em',\n      maxWidth: '12em',\n      ellipsis: true\n    }, {\n      title: '是否隐藏',\n      key: 'hidden',\n      minWidth: '6em',\n      maxWidth: '12em',\n      render: (_, recoder, idx) => /*#__PURE__*/_jsx(CheckBox, {\n        switchStyle: true,\n        checkText: \"\\u662F\",\n        uncheckText: \"\\u5426\",\n        value: !!this.state.data[idx].hide,\n        onChange: value => this.setState(state => {\n          var {\n            data\n          } = state;\n          data[idx].hide = value;\n          return {\n            data\n          };\n        })\n      })\n    }, {\n      title: '操作',\n      key: 'op',\n      minWidth: '12em',\n      maxWidth: '15em',\n      headStyle: {\n        textAlign: 'center'\n      },\n      render: (_, record, idx) => /*#__PURE__*/_jsxs(Flex, {\n        mainAxis: \"space-around\",\n        children: [/*#__PURE__*/_jsx(Button, {\n          size: \"small\",\n          onClick: () => this.onEdit(idx),\n          neumorphism: true,\n          prefix: /*#__PURE__*/_jsx(Edit, {}),\n          children: \"\\u4FEE\\u6539\"\n        }), /*#__PURE__*/_jsx(Popover, {\n          shadow: true,\n          card: true,\n          trigger: ['click'],\n          component: /*#__PURE__*/_jsxs(Card, {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"\\u771F\\u7684\\u8981\\u5220\\u9664\\u4E48\\uFF1F\"\n            }), /*#__PURE__*/_jsx(Button, {\n              onClick: () => {\n                this.onDelete(record.id);\n              },\n              size: \"small\",\n              danger: true,\n              neumorphism: true,\n              primary: true,\n              children: \"\\u5220\\u9664\\uFF01\"\n            })]\n          }),\n          children: /*#__PURE__*/_jsx(Button, {\n            size: \"small\",\n            danger: true,\n            neumorphism: true,\n            prefix: /*#__PURE__*/_jsx(Delete, {}),\n            children: \"\\u5220\\u9664\"\n          })\n        })]\n      })\n    }]);\n\n    _defineProperty(this, \"onInsert\", () => {\n      this.setState(state => {\n        var data = state.data;\n        data.unshift({\n          id: '',\n          name: randomString(),\n          short: randomString(),\n          color: '',\n          icon: '',\n          count: 0,\n          description: '',\n          hide: false\n        });\n        data = data.map(d => d);\n        return {\n          data\n        };\n      });\n    });\n\n    _defineProperty(this, \"onEdit\", async idx => {\n      var tag = this.state.data[idx];\n      var r = await tagEdit(tag.id, tag.name, tag.short, tag.color, tag.icon, tag.description, tag.hide);\n      ShowNotification(r);\n    });\n\n    _defineProperty(this, \"onDelete\", async id => {\n      var r = await tagDelete(id);\n      ShowNotification(r);\n      this.setState(state => ({\n        data: state.data.filter(tag => tag.id != id)\n      }));\n    });\n\n    _defineProperty(this, \"searchOnChange\", value => {\n      waitUntil('admin_tags_search', () => {\n        this.setState(state => {\n          return {\n            page: 1,\n            keyword: value\n          };\n        });\n        this.getData(value, this.state.size);\n      }, 1000);\n    });\n\n    _defineProperty(this, \"renderImages\", () => {\n      return /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [/*#__PURE__*/_jsx(QiniuModal, {\n          show: this.state.upload,\n          onClose: () => this.setState({\n            upload: false\n          }),\n          defaultTab: \"upload\"\n        }), /*#__PURE__*/_jsx(Button, {\n          circle: true,\n          size: \"large\",\n          primary: true,\n          danger: this.state.upload,\n          neumorphism: true,\n          style: {\n            position: 'fixed',\n            right: 20,\n            top: 50,\n            zIndex: 2\n          },\n          onClick: () => this.setState(state => ({\n            upload: !state.upload\n          })),\n          icon: /*#__PURE__*/_jsx(Image, {})\n        })]\n      });\n    });\n\n    this.state = {\n      loading: false,\n      data: [],\n      total: 0,\n      page: 1,\n      size: 10,\n      keyword: '',\n      upload: false,\n      sortField: 'count',\n      sortAscending: false\n    };\n  }\n\n  componentDidMount() {\n    this.getData('', 10);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(Card, {\n      neumorphism: true,\n      children: [/*#__PURE__*/_jsx(Context.Consumer, {\n        children: context => /*#__PURE__*/_jsx(Head, {\n          children: /*#__PURE__*/_jsx(\"title\", {\n            children: `标签列表|后台|${context.blog_name}`\n          })\n        })\n      }), this.renderImages(), /*#__PURE__*/_jsxs(Flex, {\n        subSize: \"middle\",\n        children: [/*#__PURE__*/_jsx(Flex.Item, {\n          style: {\n            flex: '1 1 auto'\n          },\n          children: /*#__PURE__*/_jsx(Input, {\n            placeholder: \"\\u641C\\u7D22\\u6807\\u7B7E\",\n            onChange: this.searchOnChange\n          })\n        }), /*#__PURE__*/_jsx(Button, {\n          primary: true,\n          onClick: this.onInsert,\n          neumorphism: true,\n          prefix: /*#__PURE__*/_jsx(Plus, {}),\n          children: \"\\u65B0\\u5EFA\\u6807\\u7B7E\"\n        })]\n      }), /*#__PURE__*/_jsx(Table, {\n        //   rowKey={(record) => record.id}\n        columns: this.columns //   scroll={{ x: true }}\n        ,\n        data: this.state.data,\n        loading: this.state.loading //   onChange={}\n        ,\n        expand: (_, idx) => this.renderEditableCell(idx, 'description', true),\n        pagination: {\n          page: this.state.page,\n          size: this.state.size,\n          total: this.state.total,\n          sizeSelect: [10, 20, 30, 40, 50]\n        },\n        onChange: (page, size, name, ascending) => {\n          this.getData(this.state.keyword, size, page, !!name ? name : defaultSortField, !!name ? ascending : defaultSortInc);\n        }\n      })]\n    });\n  }\n\n}\n\n_defineProperty(AdminTagList, \"defaultProps\", {});\n\nexport default AdminTagList;","map":null,"metadata":{},"sourceType":"module"}