{"ast":null,"code":"import { message } from '@/components/notification';\nimport axios from 'axios'; // 超时时间 15 秒\n\naxios.defaults.timeout = 15 * 1000;\nexport const backendURI = !!process.env['backendURI'] || 'http://127.0.0.1:50000';\n\nfunction parseURL(url) {\n  return backendURI + url;\n} // export const requestAsync = async (method: 'post' | 'get', url: string, data: any) => {\n//   var r = await axios({\n//     method: method,\n//     url: parseURL(url),\n//     params: data,\n//   });\n//   return r.data;\n// };\n// export const requestCallback = (\n//   method: 'post' | 'get',\n//   url: string,\n//   data: any,\n//     callback: (data: any) => void,\n//   ignore_exception?:boolean,\n// ) => {\n//   axios({\n//     method: method,\n//     url: parseURL(url),\n//     params: data,\n//   })\n//     .then((data) => data.data)\n//     .then((data) => callback(data))\n//     .catch((err) => console.log(err));\n// };\n\n\nexport const request = async (method, url, data, callback, ignore_exception) => {\n  ignore_exception = typeof ignore_exception === 'undefined' ? false : ignore_exception;\n\n  try {\n    var r = await axios({\n      method: method,\n      url: parseURL(url),\n      params: method === 'get' ? data : undefined,\n      data: method === 'post' ? data : undefined,\n      withCredentials: true\n    });\n  } catch (e) {\n    console.log(e);\n\n    if (!ignore_exception) {\n      if (typeof document !== 'undefined') message({\n        title: '请求发生错误',\n        content: `${e}`,\n        alertType: 'error'\n      });\n      throw e;\n    }\n  }\n\n  if (!!callback) {\n    callback(r.data);\n  }\n\n  return r.data;\n};","map":null,"metadata":{},"sourceType":"module"}